apiVersion: apps/v1
kind: Deployment
metadata:
  name: leptos-sync-websocket
  namespace: leptos-sync
  labels:
    app: leptos-sync-websocket
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: leptos-sync-websocket
  template:
    metadata:
      labels:
        app: leptos-sync-websocket
        version: v1.0.0
    spec:
      containers:
      - name: websocket-server
        image: leptos-sync-websocket:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: websocket
        env:
        - name: RUST_LOG
          value: "info"
        - name: WS_ADDR
          value: "0.0.0.0:8080"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: leptos-sync-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: leptos-sync-secrets
              key: redis-url
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: leptos-sync-websocket-service
  namespace: leptos-sync
  labels:
    app: leptos-sync-websocket
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: websocket
  selector:
    app: leptos-sync-websocket
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: leptos-sync-websocket-ingress
  namespace: leptos-sync
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/websocket-services: "leptos-sync-websocket-service"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  tls:
  - hosts:
    - websocket.leptos-sync.example.com
    secretName: leptos-sync-websocket-tls
  rules:
  - host: websocket.leptos-sync.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: leptos-sync-websocket-service
            port:
              number: 8080
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: leptos-sync-websocket-hpa
  namespace: leptos-sync
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: leptos-sync-websocket
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
