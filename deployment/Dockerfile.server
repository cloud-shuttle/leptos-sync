# Multi-stage build for Leptos-Sync WebSocket Server
FROM rust:1.75-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy Cargo files
COPY Cargo.toml Cargo.lock ./
COPY leptos-sync/Cargo.toml ./leptos-sync/

# Create dummy source files to build dependencies
RUN mkdir -p leptos-sync/src && \
    echo "fn main() {}" > leptos-sync/src/main.rs && \
    cargo build --release --bin websocket-server && \
    rm -rf leptos-sync/src

# Copy source code
COPY leptos-sync/src ./leptos-sync/src

# Build the application
RUN cargo build --release --bin websocket-server

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd --create-home --shell /bin/bash leptos

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/target/release/websocket-server /app/websocket-server

# Change ownership to non-root user
RUN chown leptos:leptos /app/websocket-server

# Switch to non-root user
USER leptos

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the application
CMD ["/app/websocket-server"]
